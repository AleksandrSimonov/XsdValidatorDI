@model DICareerGoal.Models.UploadViewModel

<script src="js/Home/index.js"></script>

<link rel="stylesheet" href="css/site.css" />
<link rel="stylesheet" href="css/styles.css" />

<link href="https://cdn.kendostatic.com/2022.2.621/styles/kendo.default-purple.min.css" rel="stylesheet" type="text/css" />

<script src="https://cdn.kendostatic.com/2022.2.621/js/jquery.min.js"></script>
<script src="https://cdn.kendostatic.com/2022.2.621/js/jszip.min.js"></script>
<script src="https://cdn.kendostatic.com/2022.2.621/js/kendo.all.min.js"></script>
<script src="https://cdn.kendostatic.com/2022.2.621/js/kendo.aspnetmvc.min.js"></script>




<div class="card border-dark mb-3" style="width: max-content; margin-left: 600; ">
    @Html.HiddenFor(m => m.FileSavedName)
    @Html.HiddenFor(m => m.IsUploadSuccessed)

    <div class="container ">

        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-">
                <h3>Валидация xml фала по xsd схеме</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2 col-lg-2"></div>
            <div class="col-md-7 col-lg-7">
                @(Html.Kendo().Upload()
                .Name("files")
                .Multiple(false)
                .Async(a => a
                    .Save("UploadFile", "Home")
                    .Remove("RemoveFile", "Home")
                    .AutoUpload(true)
                )
                .DropZone(".dropZoneElement")
                .Validation(validation =>
                {
                validation.AllowedExtensions( new string[] { Model.xmlExtension });
        if (@Model.limite.HasValue)
        {
            validation.MaxFileSize(Model.limite.Value);
        }
    })
                .Messages(message=> message
                    .InvalidFileExtension("Неправильный тип файла!")
                    .UploadSuccess("Файл загружен успешно")
                    )
                .Events(e=> e
                   .Success("uploadedIsCompleted")
                   .Clear("validateDisable")
                   .Cancel("validateDisable")
                   .Error("validateDisable")
                   .Progress("validateDisable")
                   .Remove("validateDisable")
                )
            )
            </div>
        </div>

        <div id="AlertSuccess" class="row hidden">
            <div class="col-md-2 col-lg-2"></div>
            <div class="col-md-7 col-lg-7">
                <div class="alert alert-success" role="alert"></div>
            </div>
        </div>

        <div id="AlertDanger" class="row hidden">
            <div class="col-md-2 col-lg-2"></div>
            <div class="col-md-7 col-lg-7">
                <div class="alert alert-danger" role="alert"></div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-2 col-lg-2"></div>
            <div class="col-md-7 col-lg-7">
                @(Html.Kendo().Button()
            .Name("Validate")
            .Content("Проверить по xsd")
            .Events(e => e.Click("validateXML"))
            .HtmlAttributes(new { @class = "validate-button"  })
            .Enable(false)
            )
            </div>
        </div>
    </div>
</div>
